{
  "name": "База Данных Workflow",
  "meta": {
    "instanceId": "baza-workflow-instance",
    "templateCredsSetupCompleted": true
  },
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "database",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "c0236456-40be-4f8f-a730-e56cb62b7b5c",
      "name": "Database API",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [780, 600]
    },
    {
      "parameters": {
        "functionCode": "// Parse incoming database request\nreturn items.map(item => {\n  const data = item.json;\n  \n  // Default operation is read if not specified\n  const operation = data.operation || 'read';\n  \n  return {\n    json: {\n      operation,\n      table: data.table,\n      data: data.data || {},\n      conditions: data.conditions || {},\n      fields: data.fields || [],\n      id: data.id\n    }\n  };\n});"
      },
      "id": "d93b4429-2200-4a84-8505-16266fedfccd",
      "name": "Parse Request",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1000, 600]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true
          },
          "conditions": [
            {
              "id": "d3afe65c-7c80-4caa-9d1c-33c62fbc2197",
              "leftValue": "={{ $json.operation }}",
              "rightValue": "create",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2ed874a9-5bcf-4cc9-9b52-ea503a562892",
      "name": "Operation Router",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1220, 600]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.baza.db/tables/{{ $json.table }}/records",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.bazaApi.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "jsonParameters": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "data",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cc106fa0-6630-4c84-aea4-a4c7a3c149e9",
      "name": "Create Record",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1440, 400]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true
          },
          "conditions": [
            {
              "id": "d3afe65c-7c80-4caa-9d1c-33c62fbc2197",
              "leftValue": "={{ $json.operation }}",
              "rightValue": "update",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0fa1fbf6-fe77-4044-a445-c49a1db37dec",
      "name": "Check Update",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1440, 600]
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://api.baza.db/tables/{{ $json.table }}/records/{{ $json.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.bazaApi.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "jsonParameters": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "data",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "id": "09b8584c-4ead-4007-a6cd-edaa4669a757",
      "name": "Update Record",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1660, 600]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true
          },
          "conditions": [
            {
              "id": "d3afe65c-7c80-4caa-9d1c-33c62fbc2197",
              "leftValue": "={{ $json.operation }}",
              "rightValue": "delete",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1c5c81c6-f532-4c82-a7a0-53b0b5b823d8",
      "name": "Check Delete",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1440, 800]
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=https://api.baza.db/tables/{{ $json.table }}/records/{{ $json.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.bazaApi.apiKey }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5dc6a7e9-034f-4f1a-9a48-41bb3a0b23a5",
      "name": "Delete Record",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1660, 800]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "=https://api.baza.db/tables/{{ $json.table }}/records",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.bazaApi.apiKey }}"
            }
          ]
        },
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "filter",
              "value": "={{ JSON.stringify($json.conditions) }}"
            },
            {
              "name": "fields",
              "value": "={{ $json.fields.join(',') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7b9481a9-c66e-4d6a-b4d3-b2352c0b9854",
      "name": "Read Records",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1660, 1000]
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": []
        },
        "options": {}
      },
      "id": "9c3a4f12-71f9-4f0a-928c-7b84b3c9b4a2",
      "name": "Combine Results",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [1880, 600]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "a4b5c6d7-e8f9-0g1h-2i3j-4k5l6m7n8o9p",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2100, 600]
    }
  ],
  "connections": {
    "Database API": {
      "main": [
        [
          {
            "node": "Parse Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Request": {
      "main": [
        [
          {
            "node": "Operation Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Operation Router": {
      "main": [
        [
          {
            "node": "Create Record",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Record": {
      "main": [
        [
          {
            "node": "Combine Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Update": {
      "main": [
        [
          {
            "node": "Update Record",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Record": {
      "main": [
        [
          {
            "node": "Combine Results",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check Delete": {
      "main": [
        [
          {
            "node": "Delete Record",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Read Records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Record": {
      "main": [
        [
          {
            "node": "Combine Results",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Read Records": {
      "main": [
        [
          {
            "node": "Combine Results",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Combine Results": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}